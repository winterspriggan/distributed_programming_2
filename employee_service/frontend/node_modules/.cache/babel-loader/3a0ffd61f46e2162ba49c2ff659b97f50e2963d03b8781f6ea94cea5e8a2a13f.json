{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\junse\\\\Desktop\\\\workspace\\\\GitHub\\\\ds2project\\\\employee_service\\\\frontend\\\\src\\\\user_defined_react_component\\\\specific\\\\Main\\\\MainContents\\\\CreateAnswer\\\\CreateAnswer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport './CreateAnswer.css';\nimport { ENDPOINT_GET_BOARDS, ENDPOINT_POST_ANSWER_BOARD } from \"../../../../common/Endpoint/Endpoint\";\nimport swal from \"sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardRecord({\n  board,\n  employee\n}) {\n  function answerBoard({\n    board\n  }) {\n    let answer;\n    swal({\n      content: \"input\"\n    }).then(r => answer = r);\n    axios.post(ENDPOINT_POST_ANSWER_BOARD, {\n      id: board.id,\n      answer: answer,\n      answerer: employee.id\n    }).then(response => {\n      swal({\n        title: '답변 등록 성공',\n        text: '답변이 등록되었습니다.',\n        icon: 'success',\n        button: '확인'\n      });\n    }).catch(error => {\n      swal({\n        title: '시스템 오류',\n        text: '잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',\n        icon: 'error',\n        button: '확인'\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: board.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: board.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: board.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        answerBoard(board);\n      },\n      children: \"\\uB2F5\\uBCC0\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_c = BoardRecord;\nexport default function CreateAnswer({\n  employee\n}) {\n  _s();\n  const [boards, setBoards] = useState(null);\n  function refreshBoards() {\n    axios.get(ENDPOINT_GET_BOARDS).then(response => {\n      setBoards(response.data);\n    }).catch(error => {\n      swal({\n        title: '시스템 오류',\n        text: '잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',\n        icon: 'error',\n        button: '확인'\n      });\n    });\n  }\n  useEffect(() => {\n    refreshBoards();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'create_answer',\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uBB38\\uC758 \\uAC8C\\uC2DC\\uD310\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uC81C\\uBAA9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uC791\\uC131\\uC790\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uB0B4\\uC6A9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uB2F5\\uBCC0 \\uBC84\\uD2BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), boards !== null ? boards.filter(board => board.is_answered === 0).map(board => /*#__PURE__*/_jsxDEV(BoardRecord, {\n        board: board,\n        employee: employee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 97\n      }, this)) : \"LOADING...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateAnswer, \"7ig+UM+CgHM5H2OrZW7BExAzX3M=\");\n_c2 = CreateAnswer;\nvar _c, _c2;\n$RefreshReg$(_c, \"BoardRecord\");\n$RefreshReg$(_c2, \"CreateAnswer\");","map":{"version":3,"names":["React","useEffect","useState","axios","ENDPOINT_GET_BOARDS","ENDPOINT_POST_ANSWER_BOARD","swal","jsxDEV","_jsxDEV","BoardRecord","board","employee","answerBoard","answer","content","then","r","post","id","answerer","response","title","text","icon","button","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","author","onClick","e","_c","CreateAnswer","_s","boards","setBoards","refreshBoards","get","data","className","filter","is_answered","map","_c2","$RefreshReg$"],"sources":["C:/Users/junse/Desktop/workspace/GitHub/ds2project/employee_service/frontend/src/user_defined_react_component/specific/Main/MainContents/CreateAnswer/CreateAnswer.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport './CreateAnswer.css'\r\nimport {ENDPOINT_GET_BOARDS, ENDPOINT_POST_ANSWER_BOARD} from \"../../../../common/Endpoint/Endpoint\";\r\nimport swal from \"sweetalert\";\r\n\r\nfunction BoardRecord({board, employee}) {\r\n\r\n    function answerBoard({board}) {\r\n        let answer;\r\n        swal({\r\n            content: \"input\",\r\n        }).then(r => answer = r);\r\n        axios.post(ENDPOINT_POST_ANSWER_BOARD, {\r\n            id: board.id,\r\n            answer: answer,\r\n            answerer: employee.id\r\n        })\r\n            .then(response => {\r\n                swal({\r\n                    title: '답변 등록 성공',\r\n                    text: '답변이 등록되었습니다.',\r\n                    icon: 'success',\r\n                    button: '확인',\r\n                });\r\n            })\r\n            .catch(error => {\r\n                swal({\r\n                    title: '시스템 오류',\r\n                    text: '잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',\r\n                    icon: 'error',\r\n                    button: '확인',\r\n                });\r\n            });\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{board.title}</td>\r\n            <td>{board.author}</td>\r\n            <td>{board.content}</td>\r\n            <button onClick={e => {\r\n                answerBoard(board)\r\n            }}>답변하기\r\n            </button>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default function CreateAnswer({employee}) {\r\n\r\n    const [boards, setBoards] = useState(null);\r\n\r\n    function refreshBoards() {\r\n        axios.get(ENDPOINT_GET_BOARDS)\r\n            .then(response => {\r\n                setBoards(response.data);\r\n            })\r\n            .catch(error => {\r\n                swal({\r\n                    title: '시스템 오류',\r\n                    text: '잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',\r\n                    icon: 'error',\r\n                    button: '확인',\r\n                });\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshBoards();\r\n    }, []);\r\n\r\n    return (\r\n        <div className={'create_answer'}>\r\n            <h2>문의 게시판</h2>\r\n            <table>\r\n                <tr>\r\n                    <th>제목</th>\r\n                    <th>작성자</th>\r\n                    <th>내용</th>\r\n                    <th>답변 버튼</th>\r\n                </tr>\r\n                {boards !== null ? boards.filter(board => board.is_answered === 0).map(board => <BoardRecord\r\n                        board={board} employee={employee}/>)\r\n                    : \"LOADING...\"\r\n                }\r\n            </table>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}