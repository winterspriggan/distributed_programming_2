{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import axios from\"axios\";import'./CreateAnswer.css';import{ENDPOINT_GET_BOARDS,ENDPOINT_POST_ANSWER_BOARD}from\"../../../../common/Endpoint/Endpoint\";import swal from\"sweetalert\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function answerBoard(_ref){let{board}=_ref;let answer;swal({content:\"input\"}).then(r=>answer=r);axios.post(ENDPOINT_POST_ANSWER_BOARD,{id:board.id,answer:answer,answerer:employee.id}).then(response=>{swal({title:'답변 등록 성공',text:'답변이 등록되었습니다.',icon:'success',button:'확인'});}).catch(error=>{swal({title:'시스템 오류',text:'잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',icon:'error',button:'확인'});});refreshBoards();}function BoardRecord(_ref2){let{board}=_ref2;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:board.title}),/*#__PURE__*/_jsx(\"td\",{children:board.author}),/*#__PURE__*/_jsx(\"td\",{children:board.content}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{answerBoard(board);},children:\"\\uB2F5\\uBCC0\\uD558\\uAE30\"})]});}export default function CreateAnswer(_ref3){let{employee}=_ref3;const[boards,setBoards]=useState(null);function refreshBoards(){axios.get(ENDPOINT_GET_BOARDS).then(response=>{setBoards(response.data);}).catch(error=>{swal({title:'시스템 오류',text:'잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',icon:'error',button:'확인'});});}useEffect(()=>{refreshBoards();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:'create_answer',children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uBB38\\uC758 \\uAC8C\\uC2DC\\uD310\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\uC81C\\uBAA9\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC791\\uC131\\uC790\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uB0B4\\uC6A9\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uB2F5\\uBCC0 \\uBC84\\uD2BC\"})]}),boards!==null?boards.filter(board=>board.is_answered===0).map(board=>/*#__PURE__*/_jsx(BoardRecord,{board:board})):\"LOADING...\"]})]});}","map":{"version":3,"names":["React","useEffect","useState","axios","ENDPOINT_GET_BOARDS","ENDPOINT_POST_ANSWER_BOARD","swal","jsx","_jsx","jsxs","_jsxs","answerBoard","_ref","board","answer","content","then","r","post","id","answerer","employee","response","title","text","icon","button","catch","error","refreshBoards","BoardRecord","_ref2","children","author","onClick","e","CreateAnswer","_ref3","boards","setBoards","get","data","className","filter","is_answered","map"],"sources":["C:/Users/junse/Desktop/workspace/GitHub/ds2project/employee_service/frontend/src/user_defined_react_component/specific/Main/MainContents/CreateAnswer/CreateAnswer.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport './CreateAnswer.css'\r\nimport {ENDPOINT_GET_BOARDS, ENDPOINT_POST_ANSWER_BOARD} from \"../../../../common/Endpoint/Endpoint\";\r\nimport swal from \"sweetalert\";\r\n\r\nfunction answerBoard({board}) {\r\n    let answer;\r\n    swal({\r\n        content: \"input\",\r\n    }).then(r => answer = r);\r\n    axios.post(ENDPOINT_POST_ANSWER_BOARD, {\r\n        id: board.id,\r\n        answer: answer,\r\n        answerer: employee.id\r\n    })\r\n        .then(response => {\r\n            swal({\r\n                title: '답변 등록 성공',\r\n                text: '답변이 등록되었습니다.',\r\n                icon: 'success',\r\n                button: '확인',\r\n            });\r\n        })\r\n        .catch(error => {\r\n            swal({\r\n                title: '시스템 오류',\r\n                text: '잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',\r\n                icon: 'error',\r\n                button: '확인',\r\n            });\r\n        });\r\n    refreshBoards();\r\n}\r\n\r\n\r\nfunction BoardRecord({board}) {\r\n    return (\r\n        <tr>\r\n            <td>{board.title}</td>\r\n            <td>{board.author}</td>\r\n            <td>{board.content}</td>\r\n            <button onClick={e => {answerBoard(board)}}>답변하기</button>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default function CreateAnswer({employee}) {\r\n\r\n    const [boards, setBoards] = useState(null);\r\n\r\n    function refreshBoards() {\r\n        axios.get(ENDPOINT_GET_BOARDS)\r\n            .then(response => {\r\n                setBoards(response.data);\r\n            })\r\n            .catch(error => {\r\n                swal({\r\n                    title: '시스템 오류',\r\n                    text: '잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',\r\n                    icon: 'error',\r\n                    button: '확인',\r\n                });\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshBoards();\r\n    }, []);\r\n\r\n    return (\r\n        <div className={'create_answer'}>\r\n            <h2>문의 게시판</h2>\r\n            <table>\r\n                <tr>\r\n                    <th>제목</th>\r\n                    <th>작성자</th>\r\n                    <th>내용</th>\r\n                    <th>답변 버튼</th>\r\n                </tr>\r\n                {boards !== null ? boards.filter(board => board.is_answered === 0).map(board => <BoardRecord\r\n                        board={board}/>)\r\n                    : \"LOADING...\"\r\n                }\r\n            </table>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}