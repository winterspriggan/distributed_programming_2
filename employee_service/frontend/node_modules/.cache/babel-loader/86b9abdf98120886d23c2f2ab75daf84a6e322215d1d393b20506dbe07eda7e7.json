{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\junse\\\\Desktop\\\\workspace\\\\GitHub\\\\ds2project\\\\employee_service\\\\frontend\\\\src\\\\user_defined_react_component\\\\specific\\\\Main\\\\MainContents\\\\CreateAnswer\\\\CreateAnswer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport './CreateAnswer.css';\nimport { ENDPOINT_GET_BOARDS, ENDPOINT_POST_ANSWER_BOARD } from \"../../../../common/Endpoint/Endpoint\";\nimport swal from \"sweetalert\";\nimport Button from \"../../../../common/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardRecord({\n  board,\n  employee\n}) {\n  function answerBoard() {\n    swal({\n      content: \"input\"\n    }).then(answer => {\n      if (answer === '') {\n        swal({\n          title: '답변 등록 실패',\n          text: '입력이 비어있습니다.',\n          icon: 'error',\n          button: '확인'\n        });\n      } else {\n        axios.post(ENDPOINT_POST_ANSWER_BOARD, null, {\n          params: {\n            id: board.id,\n            answer: answer,\n            answerer: employee.id,\n            is_answered: 1\n          }\n        }).then(response => {\n          if (response.data === true) {\n            swal({\n              title: '답변 등록 성공',\n              text: '답변이 등록되었습니다.',\n              icon: 'success',\n              button: '확인'\n            });\n          } else {\n            swal({\n              title: '답변 등록 실패',\n              text: '입력을 다시 확인해주세요.',\n              icon: 'error',\n              button: '확인'\n            });\n          }\n        }).catch(error => {\n          swal({\n            title: '시스템 오류',\n            text: '잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',\n            icon: 'error',\n            button: '확인'\n          });\n        });\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: board.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: board.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: board.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        text: '답변하기',\n        onClick: answerBoard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_c = BoardRecord;\nexport default function CreateAnswer({\n  employee\n}) {\n  _s();\n  const [boards, setBoards] = useState(null);\n  function refreshBoards() {\n    axios.get(ENDPOINT_GET_BOARDS).then(response => {\n      setBoards(response.data);\n    }).catch(error => {\n      swal({\n        title: '시스템 오류',\n        text: '잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',\n        icon: 'error',\n        button: '확인'\n      });\n    });\n  }\n  useEffect(() => {\n    refreshBoards();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'create_answer',\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uBB38\\uC758 \\uAC8C\\uC2DC\\uD310\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uC81C\\uBAA9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uC791\\uC131\\uC790\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uB0B4\\uC6A9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uB2F5\\uBCC0 \\uBC84\\uD2BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), boards !== null ? boards.filter(board => board.is_answered === 0).map(board => /*#__PURE__*/_jsxDEV(BoardRecord, {\n        board: board,\n        employee: employee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 97\n      }, this)) : \"LOADING...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateAnswer, \"7ig+UM+CgHM5H2OrZW7BExAzX3M=\");\n_c2 = CreateAnswer;\nvar _c, _c2;\n$RefreshReg$(_c, \"BoardRecord\");\n$RefreshReg$(_c2, \"CreateAnswer\");","map":{"version":3,"names":["React","useEffect","useState","axios","ENDPOINT_GET_BOARDS","ENDPOINT_POST_ANSWER_BOARD","swal","Button","jsxDEV","_jsxDEV","BoardRecord","board","employee","answerBoard","content","then","answer","title","text","icon","button","post","params","id","answerer","is_answered","response","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","author","onClick","_c","CreateAnswer","_s","boards","setBoards","refreshBoards","get","className","filter","map","_c2","$RefreshReg$"],"sources":["C:/Users/junse/Desktop/workspace/GitHub/ds2project/employee_service/frontend/src/user_defined_react_component/specific/Main/MainContents/CreateAnswer/CreateAnswer.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport './CreateAnswer.css'\r\nimport {ENDPOINT_GET_BOARDS, ENDPOINT_POST_ANSWER_BOARD} from \"../../../../common/Endpoint/Endpoint\";\r\nimport swal from \"sweetalert\";\r\nimport Button from \"../../../../common/Button/Button\";\r\n\r\nfunction BoardRecord({board, employee}) {\r\n    function answerBoard() {\r\n        swal({\r\n            content: \"input\",\r\n        }).then(answer => {\r\n            if (answer === '') {\r\n                swal({\r\n                    title: '답변 등록 실패',\r\n                    text: '입력이 비어있습니다.',\r\n                    icon: 'error',\r\n                    button: '확인',\r\n                });\r\n            } else {\r\n                axios.post(ENDPOINT_POST_ANSWER_BOARD, null, {\r\n                    params: {\r\n                        id: board.id,\r\n                        answer: answer,\r\n                        answerer: employee.id,\r\n                        is_answered: 1\r\n                    }\r\n                })\r\n                    .then(response => {\r\n                        if (response.data === true) {\r\n                            swal({\r\n                                title: '답변 등록 성공',\r\n                                text: '답변이 등록되었습니다.',\r\n                                icon: 'success',\r\n                                button: '확인',\r\n                            });\r\n                        } else {\r\n                            swal({\r\n                                title: '답변 등록 실패',\r\n                                text: '입력을 다시 확인해주세요.',\r\n                                icon: 'error',\r\n                                button: '확인',\r\n                            });\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        swal({\r\n                            title: '시스템 오류',\r\n                            text: '잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',\r\n                            icon: 'error',\r\n                            button: '확인',\r\n                        });\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{board.title}</td>\r\n            <td>{board.author}</td>\r\n            <td>{board.content}</td>\r\n            <td><Button text={'답변하기'} onClick={answerBoard}/></td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default function CreateAnswer({employee}) {\r\n\r\n    const [boards, setBoards] = useState(null);\r\n\r\n    function refreshBoards() {\r\n        axios.get(ENDPOINT_GET_BOARDS)\r\n            .then(response => {\r\n                setBoards(response.data);\r\n            })\r\n            .catch(error => {\r\n                swal({\r\n                    title: '시스템 오류',\r\n                    text: '잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',\r\n                    icon: 'error',\r\n                    button: '확인',\r\n                });\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshBoards();\r\n    }, []);\r\n\r\n    return (\r\n        <div className={'create_answer'}>\r\n            <h2>문의 게시판</h2>\r\n            <table>\r\n                <tr>\r\n                    <th>제목</th>\r\n                    <th>작성자</th>\r\n                    <th>내용</th>\r\n                    <th>답변 버튼</th>\r\n                </tr>\r\n                {boards !== null ? boards.filter(board => board.is_answered === 0).map(board => <BoardRecord\r\n                        board={board} employee={employee}/>)\r\n                    : \"LOADING...\"\r\n                }\r\n            </table>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}