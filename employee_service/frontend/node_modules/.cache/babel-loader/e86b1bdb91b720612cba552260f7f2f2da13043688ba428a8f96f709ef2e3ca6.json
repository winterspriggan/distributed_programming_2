{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import axios from\"axios\";import'./CreateAnswer.css';import{ENDPOINT_GET_BOARDS}from\"../../../../common/Endpoint/Endpoint\";import swal from\"sweetalert\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function BoardRecord(_ref){let{board,setBoardId}=_ref;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:board.title}),/*#__PURE__*/_jsx(\"td\",{children:board.author}),/*#__PURE__*/_jsx(\"td\",{children:board.content}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>setBoardId(board.id),children:\"\\uB2F5\\uBCC0\\uD558\\uAE30\"})]});}export default function CreateAnswer(_ref2){let{employee}=_ref2;const[boards,setBoards]=useState(null);useEffect(()=>{axios.get(ENDPOINT_GET_BOARDS).then(response=>{setBoards(response.data);}).catch(error=>{swal({title:'시스템 오류',text:'잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',icon:'error',button:'확인'});});},[]);function handleSubmit(e){e.preventDefault();const boardData={id:boardId,answer:content,answerer:employee.id};axios.post('http://localhost:40022/api/board/update',boardData).then(response=>{alert('답변이 작성되었습니다.');}).catch(error=>{alert('시스템이 응답하지 않습니다, 잠시후 다시 시도해주세요.');});setBoardId(null);axios.get('http://localhost:40022/api/boards').then(response=>{setBoards(response.data);console.log(response.data);}).catch(error=>{alert('시스템이 응답하지 않습니다, 잠시후 다시 시도해주세요.');});}let listItems=null;if(boards!==null){listItems=boards.filter(board=>board.answerer==='').map(board=>/*#__PURE__*/_jsx(BoardRecord,{board:board,setBoardId:setBoardId}));}else listItems=\"loading...\";if(boardId==null){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:'board',children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uBB38\\uC758 \\uAC8C\\uC2DC\\uD310\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\uC81C\\uBAA9\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC791\\uC131\\uC790\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uB0B4\\uC6A9\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uB2F5\\uBCC0 \\uBC84\\uD2BC\"})]}),listItems]})]})});}else{return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"content\",children:\"\\uB2F5\\uBCC0\"}),/*#__PURE__*/_jsx(\"input\",{type:\"content\",id:\"content\",name:\"content\",value:content,onChange:e=>setContent(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uC791\\uC131 \\uC644\\uB8CC\"})]})});}}","map":{"version":3,"names":["React","useEffect","useState","axios","ENDPOINT_GET_BOARDS","swal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BoardRecord","_ref","board","setBoardId","children","title","author","content","onClick","e","id","CreateAnswer","_ref2","employee","boards","setBoards","get","then","response","data","catch","error","text","icon","button","handleSubmit","preventDefault","boardData","boardId","answer","answerer","post","alert","console","log","listItems","filter","map","className","onSubmit","htmlFor","type","name","value","onChange","setContent","target","required"],"sources":["C:/Users/junse/Desktop/workspace/GitHub/ds2project/employee_service/frontend/src/user_defined_react_component/specific/Main/MainContents/CreateAnswer/CreateAnswer.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport './CreateAnswer.css'\r\nimport {ENDPOINT_GET_BOARDS} from \"../../../../common/Endpoint/Endpoint\";\r\nimport swal from \"sweetalert\";\r\n\r\nfunction BoardRecord({board, setBoardId}) {\r\n    return (\r\n        <tr>\r\n            <td>{board.title}</td>\r\n            <td>{board.author}</td>\r\n            <td>{board.content}</td>\r\n            <button onClick={e => setBoardId(board.id)}>답변하기</button>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default function CreateAnswer({employee}) {\r\n\r\n    const [boards, setBoards] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axios.get(ENDPOINT_GET_BOARDS)\r\n            .then(response => {\r\n                setBoards(response.data);\r\n            })\r\n            .catch(error => {\r\n                swal({\r\n                    title: '시스템 오류',\r\n                    text: '잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',\r\n                    icon: 'error',\r\n                    button: '확인',\r\n                });\r\n            });\r\n    }, []);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const boardData = {\r\n            id: boardId,\r\n            answer: content,\r\n            answerer: employee.id\r\n        };\r\n        axios.post('http://localhost:40022/api/board/update', boardData)\r\n            .then(response => {\r\n                alert('답변이 작성되었습니다.')\r\n            })\r\n            .catch(error => {\r\n                alert('시스템이 응답하지 않습니다, 잠시후 다시 시도해주세요.');\r\n            });\r\n        setBoardId(null);\r\n        axios.get('http://localhost:40022/api/boards')\r\n            .then(response => {\r\n                setBoards(response.data);\r\n                console.log(response.data)\r\n            })\r\n            .catch(error => {\r\n                alert('시스템이 응답하지 않습니다, 잠시후 다시 시도해주세요.');\r\n            });\r\n    }\r\n\r\n    let listItems = null;\r\n    if (boards !== null) {\r\n        listItems = boards.filter(board =>\r\n            board.answerer === ''\r\n        ).map(board => <BoardRecord board={board} setBoardId={setBoardId}/>);\r\n    } else listItems = \"loading...\";\r\n\r\n    if (boardId == null) {\r\n        return (<>\r\n            <div className={'board'}>\r\n                <h1>문의 게시판</h1>\r\n                <table>\r\n                    <tr>\r\n                        <th>\r\n                            제목\r\n                        </th>\r\n                        <th>\r\n                            작성자\r\n                        </th>\r\n                        <th>\r\n                            내용\r\n                        </th>\r\n                        <th>\r\n                            답변 버튼\r\n                        </th>\r\n                    </tr>\r\n                    {listItems}\r\n                </table>\r\n            </div>\r\n        </>);\r\n    } else {\r\n        return (\r\n            <>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form\">\r\n                        <label htmlFor=\"content\">답변</label>\r\n                        <input type=\"content\" id=\"content\" name=\"content\" value={content}\r\n                               onChange={(e) => setContent(e.target.value)} required/>\r\n                    </div>\r\n                    <button type=\"submit\">작성 완료</button>\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}