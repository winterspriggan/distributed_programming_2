{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import axios from\"axios\";import'./CreateAnswer.css';import{ENDPOINT_GET_BOARDS,ENDPOINT_POST_ANSWER_BOARD}from\"../../../../common/Endpoint/Endpoint\";import swal from\"sweetalert\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function BoardRecord(_ref){let{board,answerBoard}=_ref;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:board.title}),/*#__PURE__*/_jsx(\"td\",{children:board.author}),/*#__PURE__*/_jsx(\"td\",{children:board.content}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{answerBoard(board);},children:\"\\uB2F5\\uBCC0\\uD558\\uAE30\"})]});}export default function CreateAnswer(_ref2){let{employee}=_ref2;const[boards,setBoards]=useState(null);function answerBoard(_ref3){let{board}=_ref3;let answer;swal({content:\"input\"}).then(r=>answer=r);axios.post(ENDPOINT_POST_ANSWER_BOARD,{id:board.id,answer:answer,answerer:employee.id}).then(response=>{swal({title:'답변 등록 성공',text:'답변이 등록되었습니다.',icon:'success',button:'확인'});}).catch(error=>{swal({title:'시스템 오류',text:'잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',icon:'error',button:'확인'});});refreshBoards();}function refreshBoards(){axios.get(ENDPOINT_GET_BOARDS).then(response=>{setBoards(response.data);}).catch(error=>{swal({title:'시스템 오류',text:'잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',icon:'error',button:'확인'});});}useEffect(()=>{refreshBoards();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:'create_answer',children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uBB38\\uC758 \\uAC8C\\uC2DC\\uD310\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\uC81C\\uBAA9\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC791\\uC131\\uC790\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uB0B4\\uC6A9\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uB2F5\\uBCC0 \\uBC84\\uD2BC\"})]}),boards!==null?boards.filter(board=>board.is_answered===0).map(board=>/*#__PURE__*/_jsx(BoardRecord,{board:board,answerBoard:e=>answerBoard(board)})):\"LOADING...\"]})]});}","map":{"version":3,"names":["React","useEffect","useState","axios","ENDPOINT_GET_BOARDS","ENDPOINT_POST_ANSWER_BOARD","swal","jsx","_jsx","jsxs","_jsxs","BoardRecord","_ref","board","answerBoard","children","title","author","content","onClick","e","CreateAnswer","_ref2","employee","boards","setBoards","_ref3","answer","then","r","post","id","answerer","response","text","icon","button","catch","error","refreshBoards","get","data","className","filter","is_answered","map"],"sources":["C:/Users/junse/Desktop/workspace/GitHub/ds2project/employee_service/frontend/src/user_defined_react_component/specific/Main/MainContents/CreateAnswer/CreateAnswer.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport './CreateAnswer.css'\r\nimport {ENDPOINT_GET_BOARDS, ENDPOINT_POST_ANSWER_BOARD} from \"../../../../common/Endpoint/Endpoint\";\r\nimport swal from \"sweetalert\";\r\n\r\nfunction BoardRecord({board, answerBoard}) {\r\n    return (\r\n        <tr>\r\n            <td>{board.title}</td>\r\n            <td>{board.author}</td>\r\n            <td>{board.content}</td>\r\n            <button onClick={e => {answerBoard(board)}}>답변하기</button>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default function CreateAnswer({employee}) {\r\n\r\n    const [boards, setBoards] = useState(null);\r\n\r\n    function answerBoard({board}) {\r\n        let answer;\r\n        swal({\r\n            content: \"input\",\r\n        }).then(r => answer = r);\r\n        axios.post(ENDPOINT_POST_ANSWER_BOARD, {\r\n            id: board.id,\r\n            answer: answer,\r\n            answerer: employee.id\r\n        })\r\n            .then(response => {\r\n                swal({\r\n                    title: '답변 등록 성공',\r\n                    text: '답변이 등록되었습니다.',\r\n                    icon: 'success',\r\n                    button: '확인',\r\n                });\r\n            })\r\n            .catch(error => {\r\n                swal({\r\n                    title: '시스템 오류',\r\n                    text: '잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',\r\n                    icon: 'error',\r\n                    button: '확인',\r\n                });\r\n            });\r\n        refreshBoards();\r\n    }\r\n\r\n    function refreshBoards() {\r\n        axios.get(ENDPOINT_GET_BOARDS)\r\n            .then(response => {\r\n                setBoards(response.data);\r\n            })\r\n            .catch(error => {\r\n                swal({\r\n                    title: '시스템 오류',\r\n                    text: '잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',\r\n                    icon: 'error',\r\n                    button: '확인',\r\n                });\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshBoards();\r\n    }, []);\r\n\r\n    return (\r\n        <div className={'create_answer'}>\r\n            <h2>문의 게시판</h2>\r\n            <table>\r\n                <tr>\r\n                    <th>제목</th>\r\n                    <th>작성자</th>\r\n                    <th>내용</th>\r\n                    <th>답변 버튼</th>\r\n                </tr>\r\n                {boards !== null ? boards.filter(board => board.is_answered === 0).map(board => <BoardRecord\r\n                        board={board} answerBoard={e=> answerBoard(board)}/>)\r\n                    : \"LOADING...\"\r\n                }\r\n            </table>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}