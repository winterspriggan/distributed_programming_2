{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import axios from\"axios\";import'./ViewBoard.css';import{ENDPOINT_GET_BOARDS,ENDPOINT_POST_BOARD}from'../../../../common/Endpoint/Endpoint.js';import swal from\"sweetalert\";import Button from\"../../../../common/Button/Button\";import TextInput from\"../../../../common/TextInput/TextInput\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ViewBoard(_ref){let{customer}=_ref;const[writeMode,setWriteMode]=useState(false);const[boards,setBoards]=useState(null);useEffect(()=>{axios.get(ENDPOINT_GET_BOARDS).then(response=>{setBoards(response.data);}).catch(error=>{swal({title:'시스템 오류',text:'잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',icon:'error',button:'확인'});});},[]);if(writeMode)return/*#__PURE__*/_jsx(BoardTable,{boards:boards,setWriteMode:setWriteMode});return/*#__PURE__*/_jsx(WriteBoard,{customer:customer,setWriteMode:setWriteMode});}function BoardTable(_ref2){let{boards,setWriteMode}=_ref2;let boardTableRows;if(boards!==null){boardTableRows=boards.map(board=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:board.title}),/*#__PURE__*/_jsx(\"td\",{children:board.author}),/*#__PURE__*/_jsx(\"td\",{children:board.content}),/*#__PURE__*/_jsx(\"td\",{children:board.answer}),/*#__PURE__*/_jsx(\"td\",{children:board.answerer})]}));}else boardTableRows=\"loading...\";return/*#__PURE__*/_jsxs(\"div\",{className:'board_table',children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uBB38\\uC758 \\uAC8C\\uC2DC\\uD310\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\uC81C\\uBAA9\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC791\\uC131\\uC790\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uB0B4\\uC6A9\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uB2F5\\uBCC0\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uB2F5\\uBCC0\\uC790\"})]}),boardTableRows]}),/*#__PURE__*/_jsx(Button,{text:'새 문의 작성',onClick:e=>setWriteMode(true)})]});}function WriteBoard(_ref3){let{customer,setWriteMode}=_ref3;const[title,setTitle]=useState('');const[content,setContent]=useState('');function handleSubmit(e){e.preventDefault();axios.post(ENDPOINT_POST_BOARD,{author:customer.id,title:title,content:content}).then(response=>{swal({title:'문의 작성 완료',text:'문의가 작성되었습니다.',icon:'success',button:'확인'});}).catch(error=>{swal({title:'시스템 오류',text:'잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.',icon:'error',button:'확인'});});setWriteMode(false);}return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(TextInput,{text:'제목',value:title,onChange:e=>setTitle(e.target.value)}),/*#__PURE__*/_jsx(TextInput,{text:'내용',value:content,onChange:e=>setContent(e.target.value)}),/*#__PURE__*/_jsx(Button,{text:'제출'})]});}","map":{"version":3,"names":["React","useEffect","useState","axios","ENDPOINT_GET_BOARDS","ENDPOINT_POST_BOARD","swal","Button","TextInput","jsx","_jsx","jsxs","_jsxs","ViewBoard","_ref","customer","writeMode","setWriteMode","boards","setBoards","get","then","response","data","catch","error","title","text","icon","button","BoardTable","WriteBoard","_ref2","boardTableRows","map","board","children","author","content","answer","answerer","className","onClick","e","_ref3","setTitle","setContent","handleSubmit","preventDefault","post","id","onSubmit","value","onChange","target"],"sources":["C:/Users/junse/Desktop/workspace/GitHub/ds2project/customer_service/frontend/src/user_defined_react_component/specific/Main/MainContents/ViewBoard/ViewBoard.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport './ViewBoard.css'\r\nimport {ENDPOINT_GET_BOARDS, ENDPOINT_POST_BOARD} from '../../../../common/Endpoint/Endpoint.js'\r\nimport swal from \"sweetalert\";\r\nimport Button from \"../../../../common/Button/Button\";\r\nimport TextInput from \"../../../../common/TextInput/TextInput\";\r\n\r\nexport default function ViewBoard({customer}) {\r\n\r\n    const [writeMode, setWriteMode] = useState(false);\r\n    const [boards, setBoards] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(ENDPOINT_GET_BOARDS)\r\n            .then(response => {\r\n                setBoards(response.data);\r\n            })\r\n            .catch(error => {\r\n                swal({\r\n                    title: '시스템 오류', text: '잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.', icon: 'error', button: '확인',\r\n                });\r\n            });\r\n    }, []);\r\n\r\n\r\n    if (writeMode) return <BoardTable boards={boards} setWriteMode={setWriteMode}/>;\r\n    return <WriteBoard customer={customer} setWriteMode={setWriteMode}/>\r\n}\r\n\r\nfunction BoardTable({boards, setWriteMode}) {\r\n\r\n    let boardTableRows;\r\n\r\n    if (boards !== null) {\r\n        boardTableRows = boards.map(board => <tr>\r\n            <td>{board.title}</td>\r\n            <td>{board.author}</td>\r\n            <td>{board.content}</td>\r\n            <td>{board.answer}</td>\r\n            <td>{board.answerer}</td>\r\n        </tr>);\r\n    } else boardTableRows = \"loading...\";\r\n\r\n    return (\r\n        <div className={'board_table'}>\r\n            <h2>문의 게시판</h2>\r\n            <table>\r\n                <tr>\r\n                    <th>제목</th>\r\n                    <th>작성자</th>\r\n                    <th>내용</th>\r\n                    <th>답변</th>\r\n                    <th>답변자</th>\r\n                </tr>\r\n                {boardTableRows}\r\n            </table>\r\n            <Button text={'새 문의 작성'} onClick={e => setWriteMode(true)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction WriteBoard({customer, setWriteMode}) {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        axios.post(ENDPOINT_POST_BOARD, {\r\n            author: customer.id,\r\n            title: title,\r\n            content: content\r\n        })\r\n            .then(response => {\r\n                swal({\r\n                    title: '문의 작성 완료',\r\n                    text: '문의가 작성되었습니다.',\r\n                    icon: 'success',\r\n                    button: '확인',\r\n                });\r\n            })\r\n            .catch(error => {\r\n                swal({\r\n                    title: '시스템 오류', text: '잠시후 다시 시도해주세요. 불편을 드려 죄송합니다.', icon: 'error', button: '확인',\r\n                });\r\n            });\r\n        setWriteMode(false);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TextInput text={'제목'} value={title} onChange={(e) => setTitle(e.target.value)}/>\r\n            <TextInput text={'내용'} value={content} onChange={(e) => setContent(e.target.value)}/>\r\n            <Button text={'제출'}/>\r\n        </form>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}